{
  "name": "time-mock",
  "version": "0.1.2",
  "description": "Easily manipulate and mock out time in your tests",
  "keywords": [],
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Colingo/time-mock.git"
  },
  "main": "index",
  "homepage": "https://github.com/Colingo/time-mock",
  "contributors": [
    {
      "name": "Raynos"
    }
  ],
  "bugs": {
    "url": "https://github.com/Colingo/time-mock/issues",
    "email": "raynos2@gmail.com"
  },
  "dependencies": {},
  "devDependencies": {
    "tape": "~0.2.2",
    "browserify": "https://github.com/raynos/node-browserify/tarball/master",
    "testem": "~0.2.52",
    "mock": "~0.1.0",
    "date-now": "~0.1.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/Colingo/time-mock/raw/master/LICENSE"
    }
  ],
  "scripts": {
    "test": "node ./test",
    "build": "browserify test/index.js -o test/static/bundle.js",
    "testem": "testem"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": {
      "ie": [
        "8",
        "9",
        "10"
      ],
      "firefox": [
        "16",
        "17",
        "nightly"
      ],
      "chrome": [
        "22",
        "23",
        "canary"
      ],
      "opera": [
        "12",
        "next"
      ],
      "safari": [
        "5.1"
      ]
    }
  },
  "readme": "# time-mock\n\n[![build status][1]][2]\n\n[![browser support][3]][4]\n\nEasily manipulate and mock out time in your tests\n\n## Example\n\nLet's say you have a simple time module that collects an array\n    of timestamps every second.\n\n```js\n// ./fixtures/time.js\nvar setTimeout = require(\"timers\").setTimeout\nvar now = require(\"date-now\")\n\nmodule.exports = function () {\n    var items = []\n\n    loop()\n\n    return peek\n\n    function peek() {\n        return items\n    }\n\n    function loop() {\n        items.push(now())\n\n        setTimeout(loop, 1000)\n    }\n}\n```\n\nIt uses `require(\"timers\").setTimeout` and `require(\"date-now\")` so that it's\n    not hardcoded to time based global state.\n\nWe can then simply mock these things out using [`mock`][5]\n\n```js\nvar mock = require(\"mock\")\nvar assert = require(\"assert\")\n\nvar Timer = require(\"../index\")\n\n// Pass starting time to Timer\nvar timer = Timer(0)\n\n// Pass mocked setTimeout and Date.now functions to your module\nvar time = mock(\"./fixtures/time\", {\n    timers: {\n        setTimeout: timer.setTimeout\n    }\n    , \"date-now\": timer.now\n}, require)\n\nvar t = time()\n\nconsole.log(\"#1\", t())\nassert.deepEqual(t(), [ 0 ])\n\ntimer.advance(500)\n\nconsole.log(\"#2\", t())\nassert.deepEqual(t(), [ 0 ])\n\ntimer.advance(500)\n\nconsole.log(\"#3\", t())\nassert.deepEqual(t(), [ 0, 1000 ])\n\ntimer.advance(2000)\n\nconsole.log(\"#4\", t())\nassert.deepEqual(t(), [ 0, 1000, 2000, 3000 ])\n\ntimer.advance(4999)\n\nconsole.log(\"#5\", t())\nassert.deepEqual(t(), [ 0, 1000, 2000, 3000, 4000, 5000, 6000, 7000 ])\n```\n\nTimer basically allows you to create simple mockable functions for setTimeout\n    and Date.now. You can then call `timer.advance(delta)` to make time move\n    forward.\n\nThis is awesome for unit tests when you don't want your tests to be slow based\n    on the fact that they have to wait for timeouts.\n\n## Installation\n\n`npm install time-mock`\n\n## Contributors\n\n - Raynos\n\n## MIT Licenced\n\n  [1]: https://secure.travis-ci.org/Colingo/time-mock.png\n  [2]: http://travis-ci.org/Colingo/time-mock\n  [3]: http://ci.testling.com/Colingo/time-mock.png\n  [4]: http://ci.testling.com/Colingo/time-mock\n  [5]: http://github.com/Colingo/mock\n",
  "readmeFilename": "README.md",
  "_id": "time-mock@0.1.2",
  "dist": {
    "shasum": "68d92bdd7fad98e00abb469627439d6cd0a12df3",
    "tarball": "http://registry.npmjs.org/time-mock/-/time-mock-0.1.2.tgz"
  },
  "_from": "time-mock@",
  "_npmVersion": "1.2.3",
  "_npmUser": {
    "name": "raynos",
    "email": "raynos2@gmail.com"
  },
  "maintainers": [
    {
      "name": "raynos",
      "email": "raynos2@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "68d92bdd7fad98e00abb469627439d6cd0a12df3",
  "_resolved": "https://registry.npmjs.org/time-mock/-/time-mock-0.1.2.tgz"
}
